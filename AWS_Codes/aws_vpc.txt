Step 1) Create a VPC - 192.170.0.0/16
aws ec2 create-vpc --cidr-block [cidr_block] --tag-specifications "ResourceType = [VPC_Name] , Tags = [{Key="Name",Value="[VPC_Name]"}]
aws ec2 create-vpc --cidr-block 192.170.0.0/16 --tag-specifications "ResourceType = vpc , Tags = [{Key="Name",Value="vpc"}]

Step 2) Create a public subnets - sub1
aws ec2 create-subnet --cidr-block [cidr_block] --vpc-id [VPC_Id] --availability-zone [AZ_Name] --tag-specifications "ResourceType = subnet , Tags = [{Key="Name",Value="[Subnet_Name]"}]
aws ec2 create-subnet --cidr-block 192.170.1.0/24 --vpc-id vpc-0d9e9b04f1e977b41 --availability-zone us-east-1a --tag-specifications "ResourceType = subnet , Tags = [{Key="Name",Value="sub1"}]

Step 3) Create a private subnets - sub2
aws ec2 create-subnet --cidr-block [cidr_block] --vpc-id [VPC_Id] --availability-zone [AZ_Name] --tag-specifications "ResourceType = subnet , Tags = [{Key="Name",Value="[Subnet_Name]"}]
aws ec2 create-subnet --cidr-block 192.170.2.0/24 --vpc-id vpc-0d9e9b04f1e977b41 --availability-zone us-east-1b --tag-specifications "ResourceType = subnet , Tags = [{Key="Name",Value="sub2"}]

Step 4) Create Internet Gateway
aws ec2 create-internet-gateway --tag-specifications "ResourceType = internet-gateway , Tags = [{Key="Name",Value="[IGName]"}]
aws ec2 create-internet-gateway --tag-specifications "ResourceType = internet-gateway , Tags = [{Key="Name",Value="myigw"}]

Step 5) Attach Internet gateway to vpc
aws ec2 attach-internet-gateway --vpc-id [VPC_Id] --internet-gateway-id [IGW_ID]
aws ec2 attach-internet-gateway --vpc-id vpc-0d9e9b04f1e977b41 --internet-gateway-id igw-0299a9778f2b4e2d1

Step 6) Launch Instance 1 in sub1 and auto assign IP
aws ec2 run-instances --image-id [AMI_ImageID] --instance-type t2.micro --key-name [KeyName] --security-group-ids [GroupID] --subnet-id [SubnetID] --tag-specifications "ResourceType = instance , Tags = [{Key="Name",Value="[InstanceName]"}]" --associate-public-ip-address
aws ec2 run-instances --image-id ami-0be2609ba883822ec --instance-type t2.micro --key-name arthos --security-group-ids sg-041de97735b4a4be3 --subnet-id subnet-073eaa5619ac662b8 --tag-specifications "ResourceType = instance , Tags = [{Key="Name",Value="inst1"}]" --associate-public-ip-address

Step 6) Launch Instance 2 in sub2 and don't auto assign IP
aws ec2 run-instances --image-id [AMI_ImageID] --instance-type t2.micro --key-name [KeyName] --security-group-ids [GroupID] --subnet-id [SubnetID] --tag-specifications "ResourceType = instance , Tags = [{Key="Name",Value="[InstanceName]"}]" --no-associate-public-ip-address
aws ec2 run-instances --image-id ami-0be2609ba883822ec --instance-type t2.micro --key-name arthos --security-group-ids sg-041de97735b4a4be3 --subnet-id subnet-0ba7ecab949c94aef --tag-specifications "ResourceType = instance , Tags = [{Key="Name",Value="inst2"}]" --no-associate-public-ip-address

Step 7) Create New Route table
aws ec2 create-route-table --vpc-id [VPC_Id] --tag-specifications "ResourceType = route-table , Tags = [{Key="Name",Value="[Route_Table_Name]"}]"
aws ec2 create-route-table --vpc-id vpc-0d9e9b04f1e977b41 --tag-specifications "ResourceType = route-table , Tags = [{Key="Name",Value="myroute"}]"

Step 8) Create Route
aws ec2 create-route --route-table-id [Route_Table_ID] --destination-cidr-block [Dest_CIDR] --gateway-id [Igw_ID]
aws ec2 create-route --route-table-id rtb-09b29d475ad21bbff --destination-cidr-block 0.0.0.0/0 --gateway-id igw-0299a9778f2b4e2d1

Step 9) Attach Route table to public subnet - sub1
aws ec2 associate-route-table --route-table-id [Route_Table_ID] --subnet-id [Subnet_id]
aws ec2 associate-route-table --route-table-id rtb-09b29d475ad21bbff --subnet-id subnet-073eaa5619ac662b8
